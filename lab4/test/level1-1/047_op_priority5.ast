program
    Sequence
        Sequence
            Sequence
                Sequence
                    Sequence
                        DeclStmt
                            IdQueue
                                Id	name: a	scope: 0	type: int
                                AssignStmt
                                    Id	name: a	scope: 0	type: int
                                    IntegerLiteral	value: 1	type: int
                        DeclStmt
                            IdQueue
                                Id	name: b	scope: 0	type: int
                                AssignStmt
                                    Id	name: b	scope: 0	type: int
                                    IntegerLiteral	value: 0	type: int
                    DeclStmt
                        IdQueue
                            Id	name: c	scope: 0	type: int
                            AssignStmt
                                Id	name: c	scope: 0	type: int
                                IntegerLiteral	value: 1	type: int
                DeclStmt
                    IdQueue
                        Id	name: d	scope: 0	type: int
                        AssignStmt
                            Id	name: d	scope: 0	type: int
                            IntegerLiteral	value: 2	type: int
            DeclStmt
                IdQueue
                    Id	name: e	scope: 0	type: int
                    AssignStmt
                        Id	name: e	scope: 0	type: int
                        IntegerLiteral	value: 4	type: int
        FunctionDefine function name: main, type: int()
            CompoundStmt
                Sequence
                    Sequence
                        Sequence
                            DeclStmt
                                IdQueue
                                    Id	name: flag	scope: 2	type: int
                                    AssignStmt
                                        Id	name: flag	scope: 2	type: int
                                        IntegerLiteral	value: 0	type: int
                            IfStmt
                                BinaryExpr	op: or
                                    BinaryExpr	op: and
                                        BinaryExpr	op: equ
                                            BinaryExpr	op: div
                                                BinaryExpr	op: mul
                                                    Id	name: a	scope: 0	type: int
                                                    Id	name: b	scope: 0	type: int
                                                Id	name: c	scope: 0	type: int
                                            BinaryExpr	op: add
                                                Id	name: e	scope: 0	type: int
                                                Id	name: d	scope: 0	type: int
                                        BinaryExpr	op: leq
                                            BinaryExpr	op: add
                                                BinaryExpr	op: mul
                                                    Id	name: a	scope: 0	type: int
                                                    BinaryExpr	op: add
                                                        Id	name: a	scope: 0	type: int
                                                        Id	name: b	scope: 0	type: int
                                                Id	name: c	scope: 0	type: int
                                            BinaryExpr	op: add
                                                Id	name: d	scope: 0	type: int
                                                Id	name: e	scope: 0	type: int
                                    BinaryExpr	op: equ
                                        BinaryExpr	op: sub
                                            Id	name: a	scope: 0	type: int
                                            BinaryExpr	op: mul
                                                Id	name: b	scope: 0	type: int
                                                Id	name: c	scope: 0	type: int
                                        BinaryExpr	op: sub
                                            Id	name: d	scope: 0	type: int
                                            BinaryExpr	op: div
                                                Id	name: a	scope: 0	type: int
                                                Id	name: c	scope: 0	type: int
                                CompoundStmt
                                    AssignStmt
                                        Id	name: flag	scope: 2	type: int
                                        IntegerLiteral	value: 1	type: int
                        SingleStmt
                            FunctionCall	name: putint	type: void
                                FuncRParams
                                    Id	name: flag	scope: 2	type: int
                    ReturnStmt
                        Id	name: flag	scope: 2	type: int
